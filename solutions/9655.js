/*
[문제] 항상 돌을 1개 가져가거나, 3개 가져가야 한다.

1) N = 1일 때
상근 1개 승리
(결과) 상근 승리

2) N = 2일 때
상근 1개 → (N = 1)이고, 창영이가 먼저 두는 것과 같으므로, 창영 승리
(결과) 창영 승리

3) N = 3일 때
상근 1개 → (N = 2)이고, 창영이가 먼저 두는 것과 같으므로, 상근 승리
상근 3개 승리
(결과) 상근 승리

4) N = 4일 때
상근 1개 → (N = 3)이고, 창영이가 먼저 두는 것과 같으므로, 창영 승리
상근 3개 → (N = 1)이고, 창영이가 먼저 두는 것과 같으므로, 창영 승리
(결과) 창영 승리

5) N = 5일 때
상근 1개 → (N = 4)이고, 창영이가 먼저 두는 때랑 같으므로, 상근 승리
상근 3개 → (N = 2)이고, 창영이가 먼저 두는 때랑 같으므로, 창영 승리
(결과) 상근 승리

6) N = 6일 때
상근 1개 → (N = 5)이고, 창영이가 먼저 두는 것과 같으므로, 창영 승리
상근 3개 → (N = 3)이고, 창영이가 먼저 두는 것과 같으므로, 창영 승리
(결과) 창영 승리

dp[N]: 돌이 N개일 때 상근이가 승리한다면 1, 창영이가 승리한다면 0
dp[1] = 1
dp[2] = 0
dp[3] = 1
* dp[N] = (flip dp[N - 1]) or (flip dp[N - 3])
dp[4] = 0
dp[5] = 1
*/

let fs = require('fs');
let input = fs.readFileSync('./input.txt').toString().split('\n');

// dp[N]: 돌이 N개일 때 상근이가 승리한다면 1, 창영이가 승리한다면 0

// 돌의 수(N)
let n = Number(input[0]);

// DP 테이블 초기화
let dp = new Array(n + 1).fill(false);
dp[1] = true; // 상근 승
dp[2] = false; // 창영 승
dp[3] = true; // 상근 승

// dp[N] = (flip dp[N - 1]) or (flip dp[N - 3])
for (let i = 4; i <= n; i++) {
  dp[i] = (!dp[i - 1] || !dp[i - 3]);
}

if (dp[n] == true) console.log("SK");
else console.log("CY");
